<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.people.dao.MemberDAO">
	
	<!-- 전체조회 및 페이징 처리 -->
	<select id="getAll" resultType="MemberDTO" parameterType="StartEnd">
		SELECT mno, mname, mdate, mphone, mrank, oname, msal
			FROM(SELECT (@R := @R+1) AS RN, mno, mname, mdate, mphone, mrank, oname, msal
				FROM(SELECT m.mno, m.mname, m.mdate, m.mphone, m.mrank, o.oname, m.msal
						FROM member m, organization o
						WHERE m.ono = o.ono
						ORDER BY m.mno asc) A, 
				(SELECT @R:=0) AS X LIMIT #{endNo})B
		WHERE RN &gt;=#{startNo}
	</select>
	
	<select id="getTotal" resultType="int">
		SELECT COUNT(*)
		FROM member
	</select>
	
	<!-- 부서별 평균임금 / 최고임금  -->
	<select id="getAvg" resultType="MemberDTO">
		SELECT ono, FLOOR(AVG(msal))AS amsal, MAX(msal)AS mmsal  
		FROM member
		GROUP BY ono;
	</select>
	<!-- 직급별 평균임금 / 최고임금  -->
	<select id="getAvg2" resultType="MemberDTO">
		SELECT mrank, FLOOR(AVG(msal))AS amsal, MAX(msal)AS mmsal  
		FROM member
		GROUP BY mrank;
	</select>

	<!--사원번호로 부서 + 유저 한명조회 -->
	<select id="getOne" resultType="MemberDTO" parameterType="int">
		SELECT * FROM 
		member as A
		LEFT JOIN organization as O
		on O.ono = A.ono
		WHERE A.mno = #{mno};
	</select>
	
	<!-- 아이디 찾기 (이름 이메일)  -->
	<select id="getNEOne" resultType="MemberDTO" parameterType="String">
		SELECT *
		FROM member
		WHERE mname = #{mname} 
		AND memail = #{memail}
	</select>

	<!-- 한명조회 (ID 이메일)  -->
	<select id="getIEOne" resultType="MemberDTO" parameterType="String">
		SELECT *
		FROM member
		WHERE mid = #{mid} 
		AND memail = #{memail}
	</select>

	<!-- 한건조회 -->
	<select id="getIdOne" resultType="MemberDTO" parameterType="String">
		SELECT *
		FROM member
		WHERE mid = #{mid}
	</select>
	
	<!-- 추가  -->
	<insert id="insertOne" parameterType="MemberDTO">
		INSERT INTO member (mname, mphone, mbirth, memail, maddress, maddress2, zipcode, ono, msal, role, mid, password)
		VALUES (#{mname},#{mphone},#{mbirth},#{memail},#{maddress},#{maddress2},#{zipcode},#{ono},#{msal},#{role},
				CONCAT(date_format(now(),"%Y%m%d"),LAST_INSERT_ID()+1),#{password})
	</insert>
	
	<!-- 수정  -->
	<update id="updateOne" parameterType="MemberDTO">
		UPDATE member M INNER JOIN organization O
		ON M.ono = O.ono
		SET 
			M.mname = #{mname}, M.mphone = #{mphone}, M.mbirth = #{mbirth}, M.memail = #{memail},
			M.zipcode = #{zipcode}, M.maddress = #{maddress}, M.maddress2 = #{maddress2}, 
			M.mrank = #{mrank}, M.msal = #{msal}, M.mid = #{mid} , M.password= #{password},
			M.ono = #{ono}, M.role = #{role}
		WHERE M.mno = #{mno}
	</update>
	
	<!-- 임시비밀번호  -->
	<update id="update_pw" parameterType="MemberDTO">
		UPDATE member
		SET password = #{password}
		WHERE mno = #{mno}
	</update>
	
	<!-- 삭제  -->
	<update id="deleteOne" parameterType="int">
		DELETE FROM member
		WHERE mno = #{mno}
	</update>

</mapper>