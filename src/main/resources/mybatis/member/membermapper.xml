<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.people.dao.MemberDAO">
	
	<!-- 전체조회 및 페이징 처리 -->
	<select id="getAll" resultType="MemberDTO" parameterType="StartEnd">
		SELECT distinct mno, mname, mdate, mphone, mrank, oname, msal, uno, img_name
			FROM(SELECT (@R := @R+1) AS RN, mno, mname, mdate, mphone, mrank, oname, msal, uno , img_name
				FROM(SELECT m.mno, m.mname, m.mdate, m.mphone, m.mrank, o.oname, m.msal, up.uno, mi.img_name
						FROM member m 
						LEFT OUTER JOIN member_img  mi on mi.mno = m.mno
						LEFT OUTER JOIN organization o ON m.ono = o.ono
						LEFT OUTER JOIN upper_organization up ON o.uno = up.uno
						
						<if test="keyword != null ">
						WHERE m.mno LIKE CONCAT('%',#{keyword},'%') 
						OR m.mname LIKE CONCAT('%',#{keyword},'%')
						OR m.mrank LIKE CONCAT('%',#{keyword},'%')
						OR o.oname LIKE CONCAT('%',#{keyword},'%')
						GROUP BY m.mno, m.mname, m.mrank
						</if>
						
						ORDER BY m.mno asc) A, 
				(SELECT @R:=0) AS X LIMIT #{endNo})B
		WHERE RN &gt;=#{startNo}
	</select>
	
	<select id="getTotal" resultType="int" parameterType="String">
		SELECT COUNT(*)
		FROM(SELECT o.ono as o_ono
    		FROM member m LEFT OUTER JOIN organization o
   			 ON m.ono = o.ono
			<if test="keyword != null">
			WHERE mno LIKE CONCAT('%',#{keyword},'%') 
			OR mname LIKE CONCAT('%',#{keyword},'%')
			OR mrank LIKE CONCAT('%',#{keyword},'%')
			OR o.oname LIKE CONCAT('%',#{keyword},'%')
			GROUP BY m.mno, m.mname, m.mrank
			</if>
			)A
	</select>
	
	<!-- 검색처리 (사원번호,이름,직급,부서,전화번호  -->
	<!-- <select id="getSearch" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT mno, mname, mdate, mphone, mrank, oname, msal
			FROM(SELECT m.mno, m.mname, m.mdate, m.mphone, m.mrank, o.oname, m.msal
			    FROM member m INNER JOIN organization o
			    WHERE m.ono = o.ono)A
			WHERE mno LIKE CONCAT('%',#{keyword},'%') 
			OR mname LIKE CONCAT('%',#{keyword},'%')
			OR mphone LIKE CONCAT('%',#{keyword}','%')
			OR mrank LIKE CONCAT('%',#{keyword},'%')
			OR oname LIKE CONCAT('%',#{keyword},'%');
	</select> -->
	
	<!-- 부서별 평균임금 / 최고임금  -->
	<select id="getAvg" resultType="MemberDTO">
		SELECT ono, FLOOR(AVG(msal))AS amsal, MAX(msal)AS mmsal  
		FROM member
		GROUP BY ono
		ORDER BY ono asc;
	</select>
	
	<!-- 직급별 평균임금 / 최고임금  -->
	<select id="getAvg2" resultType="MemberDTO">
		SELECT mrank, FLOOR(AVG(msal))AS amsal, MAX(msal)AS mmsal  
		FROM member
		GROUP BY mrank
		ORDER BY amsal asc;
	</select>

	<!--사원번호로 부서 + 유저 한명조회 -->
	<select id="getOne" resultType="MemberDTO" parameterType="int">
		SELECT * FROM 
		member  m
		LEFT OUTER JOIN member_img  mi on mi.mno = m.mno
		LEFT OUTER JOIN organization  o on o.ono = m.ono
		LEFT OUTER JOIN upper_organization up ON o.uno = up.uno
		WHERE m.mno = #{mno};
	</select>
	
	<!-- 아이디 찾기 (이름 이메일)  -->
	<select id="getNEOne" resultType="MemberDTO" parameterType="String">
		SELECT *
		FROM member
		WHERE mname = #{mname} 
		AND memail = #{memail}
	</select>

	<!-- 한명조회 (ID 이메일)  -->
	<select id="getIEOne" resultType="MemberDTO" parameterType="String">
		SELECT *
		FROM member
		WHERE mid = #{mid} 
		AND memail = #{memail}
	</select>

	<!-- 한건조회 -->
	<select id="getIdOne" resultType="MemberDTO" parameterType="String">
		SELECT *
		FROM member
		WHERE mid = #{mid}
	</select>
	
	<!-- 추가  -->
	<insert id="insertOne" parameterType="MemberDTO">
		INSERT INTO member (mname, mphone, mbirth, memail, maddress, maddress2, zipcode, mrank, ono, msal, role, mid, password)
		VALUES (#{mname},#{mphone},#{mbirth},#{memail},#{maddress},#{maddress2},#{zipcode},#{mrank},#{ono},#{msal},#{role},
				CONCAT(date_format(now(),"%Y%m%d"),LAST_INSERT_ID()+1),#{password})
	</insert>
	
	<!-- 수정  -->
	<update id="updateOne" parameterType="MemberDTO">
		UPDATE member M INNER JOIN organization O
		ON M.ono = O.ono
		SET 
			M.mname = #{mname}, M.mphone = #{mphone}, M.mbirth = #{mbirth}, M.memail = #{memail},
			M.zipcode = #{zipcode}, M.maddress = #{maddress}, M.maddress2 = #{maddress2}, 
			M.mrank = #{mrank}, M.msal = #{msal}, M.mid = #{mid} ,
			M.ono = #{ono}, M.role = #{role}
		WHERE M.mno = #{mno}
	</update>
	
	<!-- 임시비밀번호  -->
	<update id="update_pw" parameterType="MemberDTO">
		UPDATE member
		SET password = #{password}
		WHERE mno = #{mno}
	</update>
	
	<!-- 삭제  -->
	<update id="deleteOne" parameterType="int">
		DELETE FROM member
		WHERE mno = #{mno}
	</update>
	
	<!-- 팀장찾기 -->
	<select id="getOneTL" parameterType="int" resultType="MemberDTO">
		SELECT * FROM member
		WHERE ono = #{ono}
		AND mrank = '팀장'
	</select>
	
	<!-- 부장찾기 -->
	<select id="getOneTM" parameterType="int" resultType="MemberDTO">
		SELECT m.mname, m.mno, m.ono, m.mrank
		FROM member m
			LEFT OUTER JOIN organization o
			ON o.ono = m.ono
		WHERE o.uno = ${uno}
		AND m.mrank = '부장'
	</select>
	
	<!-- 이미지관련  -->
	<insert id="profileAdd" parameterType="ProFileDTO" useGeneratedKeys="true" keyProperty="img_no">
		INSERT INTO member_img
		values(null,#{img_name},#{img_path},#{img_size},#{mno})
	</insert>
	
	<update id="profileUpdate" parameterType="ProFileDTO" >
		UPDATE member_img
		SET img_name = #{img_name}
		WHERE mno = #{mno};
	</update>
	

</mapper>