<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.people.dao.AttendanceDAO">

	<select id="getAll" resultType="AttendanceDTO">
		SELECT work_day, date_format(now(),'%Y.%m.%d.') as date, A.*, B.*, C.*
			FROM attendance A JOIN member B
			ON A.mno = B.mno
			JOIN organization C
			ON C.ono = A.ono
			ORDER BY date desc;
	</select>
	
	<select id="readAll" parameterType="AttdStartEnd" resultType="AttendanceDTO">
	<![CDATA[
		SELECT work_day, mno, mname, oname, memail, start_time, end_time, state
		FROM(SELECT (@R := @R+1) AS RN, work_day, mno, mname, oname, memail, start_time, end_time, state
		   FROM(SELECT A.work_day, B.mno,B.mname,C.oname, B.memail, A.start_time, A.end_time, A.state  
		      FROM attendance A JOIN member B
		      ON A.mno  = B.mno
		      JOIN organization C
		      ON C.ono = A.ono
		      GROUP BY mno
		      ORDER BY mno asc)A, (SELECT @R:=0) AS X LIMIT #{endNo})B
		WHERE RN >= #{startNo};
		]]>
	</select>
	
	<select id="getattTotal" resultType="int" parameterType="int">
		SELECT count(*) from attendance
	</select>
	
	<select id="getAOne" resultType="AttendanceDTO" parameterType="AttdStartEnd">
	<![CDATA[
		SELECT work_day, mno, mname, oname, memail, start_time, end_time, state
		FROM(SELECT (@R := @R+1) AS RN, work_day, mno, mname, oname, memail, start_time, end_time, state
		   FROM(SELECT A.work_day, B.mno,B.mname,C.oname, B.memail, A.start_time, A.end_time, A.state  
		      FROM attendance A JOIN member B
		      ON A.mno  = B.mno
		      JOIN organization C
		      ON C.ono = A.ono
		      WHERE A.mno = #{mno}
		      ORDER BY work_day desc)A, (SELECT @R:=0) AS X LIMIT #{endNo})B
		WHERE RN >= #{startNo};
		]]>
	</select>
	
	<!-- modify 수정 조회 -->
 	<select id="admingetOne" resultType="AttendanceDTO" parameterType="int">
		SELECT 
		B.mname, B.mphone, B.mbirth, B.memail, 
		B.mannual, B.usemannual,
		B.mrank, B.mid, B.password,
		A.start_time, A.end_time, A.state
		FROM attendance A
		LEFT OUTER JOIN member B
		on A.mno = B.mno
		WHERE A.mno = #{mno}
		GROUP BY A.mno;
	</select>
	
	<!-- 근태관리(관리자) 수정 -->
  	<update id="updateOne" parameterType="AttendanceDTO">
		UPDATE attendance A LEFT JOIN member B
		ON A.mno = B.mno
		SET A.state = #{state}, B.mannual = #{mannual}, B.usemannual = #{usemannual}
		WHERE A.mno = #{mno}
	</update>
	
	<!-- 대시보드 근태 정상 -->
	<select id="getOneAtten" parameterType="int" resultType="AttendanceDTO">
		SELECT A.work_day, B.mno,B.mname,C.oname, B.memail, A.start_time, A.end_time, A.state  
		      FROM attendance A LEFT OUTER JOIN member B
		      ON A.mno  = B.mno
		      LEFT OUTER JOIN organization C
		      ON C.ono = A.ono
		      WHERE A.mno = #{mno}
		      AND A.state = '정상'
		      ORDER BY work_day desc
	</select>
	<!-- 대시보드 근태 지각 -->
	<select id="getOneAtten2" parameterType="int" resultType="AttendanceDTO">
		SELECT A.work_day, B.mno,B.mname,C.oname, B.memail, A.start_time, A.end_time, A.state  
		      FROM attendance A LEFT OUTER JOIN member B
		      ON A.mno  = B.mno
		      LEFT OUTER JOIN organization C
		      ON C.ono = A.ono
		      WHERE A.mno = #{mno}
		      AND A.state = '지각'
		      ORDER BY work_day desc
	</select>
	<!-- 대시보드 근태 조퇴 -->
	<select id="getOneAtten3" parameterType="int" resultType="AttendanceDTO">
		SELECT A.work_day, B.mno,B.mname,C.oname, B.memail, A.start_time, A.end_time, A.state  
		      FROM attendance A LEFT OUTER JOIN member B
		      ON A.mno  = B.mno
		      LEFT OUTER JOIN organization C
		      ON C.ono = A.ono
		      WHERE A.mno = #{mno}
		      AND A.state = '조퇴'
		      ORDER BY work_day desc
	</select>
	<!-- 대시보드 근태 결근 -->
	<select id="getOneAtten4" parameterType="int" resultType="AttendanceDTO">
		SELECT A.work_day, B.mno,B.mname,C.oname, B.memail, A.start_time, A.end_time, A.state  
		      FROM attendance A LEFT OUTER JOIN member B
		      ON A.mno  = B.mno
		      LEFT OUTER JOIN organization C
		      ON C.ono = A.ono
		      WHERE A.mno = #{mno}
		      AND A.state = '결근'
		      ORDER BY work_day desc
	</select>
	
	<!-- 출근 -->
      <select id="insertOne" parameterType="AttendanceDTO">
      <!-- INSERT INTO attendance (work_day, mno, start_time, state, ono)
		SELECT (current_date(), #{mno}, , #{state}, #{ono} FROM DUAL
		WHERE NOT EXISTS 
		(SELECT * FROM attendance
		WHERE work_day = current_date() AND mno = #{mno} AND start_time = curtime() AND state = #{state}); -->
       	INSERT INTO attendance (work_day, mno, start_time, state, ono)
		VALUES (current_date(), #{mno}, curtime(), #{state}, #{ono})
	</select>
	
	<!-- 퇴근 -->
	<select id="outworkUOne" parameterType="AttendanceDTO">
		UPDATE attendance
		SET end_time = curtime()
		WHERE mno = #{mno}
	</select>
	
	<!-- 근무시간합계 -->
	<select id="timediff" resultType="AttendanceDTO" parameterType="int">
		SELECT  TIME_FORMAT(SEC_TO_TIME(sum(TIME_TO_SEC(timediff(end_time,start_time)))),'%H시 %i분')AS timediff
		FROM attendance 
		WHERE mno = #{mno}
	</select>
	
	
</mapper>